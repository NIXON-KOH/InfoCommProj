<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - My Application</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    transitionProperty: {
                        'width': 'width',
                        'margin': 'margin-left, margin-right',
                    }
                }
            }
        }
    </script>
    @RenderSection("Styles", required: false)
    <style>
        .sidebar-transition {
            transition: width 0.3s ease-in-out;
        }

        .content-transition {
            transition: margin-left 0.3s ease-in-out;
        }

        .rotate-180 {
            transform: rotate(180deg);
        }

        .hamburger-line {
            transition: all 0.3s ease-in-out;
        }

        .hamburger-active .hamburger-line:nth-child(1) {
            transform: rotate(45deg) translate(5px, 5px);
        }

        .hamburger-active .hamburger-line:nth-child(2) {
            opacity: 0;
        }

        .hamburger-active .hamburger-line:nth-child(3) {
            transform: rotate(-45deg) translate(7px, -6px);
        }
    </style>
</head>
<body class="bg-zinc-50 dark:bg-zinc-900 transition-colors duration-300">
    <!-- Top Navigation Bar -->
    <nav class="bg-white dark:bg-zinc-900 shadow-lg fixed top-0 left-0 right-0 z-50 transition-colors duration-300">
        <div class="px-4 h-16 flex items-center justify-between">
            <!-- Hamburger Menu Button -->
            <button id="sidebarToggle" class="p-2 rounded-lg hover:bg-pink-100 dark:hover:bg-pink-700/30 transition-colors duration-200">
                <div class="w-6 h-6 flex flex-col justify-center items-center">
                    <div class="hamburger-line w-6 h-0.5 bg-zinc-600 dark:bg-zinc-100 mb-1"></div>
                    <div class="hamburger-line w-6 h-0.5 bg-zinc-600 dark:bg-zinc-200 mb-1"></div>
                    <div class="hamburger-line w-6 h-0.5 bg-zinc-600 dark:bg-zinc-300"></div>
                </div>
            </button>

            <!-- Logo/Title -->
            <div class="flex-1 ml-4">
                <h1 class="text-xl font-semibold text-zinc-800 dark:text-white">MRT.sg</h1>
            </div>

            <!-- Dark Mode Toggle -->
            <button id="darkModeToggle" class="p-2 rounded-lg hover:bg-zinc-100 dark:hover:bg-zinc-700 transition-colors duration-200">
                <svg id="sunIcon" class="w-6 h-6 text-zinc-600 dark:text-zinc-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
                </svg>
                <svg id="moonIcon" class="w-6 h-6 text-zinc-600 dark:text-zinc-300 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                </svg>
            </button>
        </div>
    </nav>

    <!-- Sidebar -->
    <aside id="sidebar" class="sidebar-transition fixed left-0 top-16 h-[calc(100vh-4rem)] bg-white dark:bg-zinc-800 shadow-lg z-40 w-64 transform transition-transform duration-300 ease-in-out">
        <div class="p-4 h-full overflow-y-auto">
            <nav class="space-y-2">

                @* Administrator Section *@
                @if (User.IsInRole("Administrator"))
                {
                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Administration</h3>
                        <a href="/Users" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Home">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                            <span>Accounts</span>
                        </a>
                    </div>
                }

                @* Station & Administrator Section *@
                @if (User.IsInRole("Station") || User.IsInRole("Administrator"))
                {
                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Operations</h3>

                        <a href="/" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Home">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                            </svg>
                            <span>Home</span>
                        </a>
                        <a href="/Issues" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Home">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.29 3.86L1.82 18a1 1 0 00.86 1.5h18.64a1 1 0 00.86-1.5L13.71 3.86a1 1 0 00-1.72 0z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v4m0 4h.01" />
                            </svg>
                            <span>Issues</span>
                        </a>
                        <a href="/HVACs" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Home">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20v-6h4v6a2 2 0 01-2 2h-0a2 2 0 01-2-2zM4 14a2 2 0 012-2h12a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM4 14a2 2 0 01-2-2V8a2 2 0 012-2h16a2 2 0 012 2v4a2 2 0 01-2 2M16 14h-4v-4m-2 4v-4" />
                            </svg>
                            <span>HVAC</span>
                        </a>
                        <a href="/Honeypot" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Home">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
                            </svg>
                            <span>Financials</span>
                        </a>


                        <a href="/blockchain" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="About">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h18M3 12h18M3 17h18" />
                            </svg>
                            <span>Blockchain Ledger</span>
                        </a>


                        <a href="/stations" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Products">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                            </svg>
                            <span>Stations</span>
                        </a>
                    </div>
                }

                @* Engineer & Administrator Section *@
                @if (User.IsInRole("Engineer") || User.IsInRole("Administrator"))
                {
                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Monitoring & Analytics</h3>

                        <a href="/Telemetry/DepotEnergyMonitoring" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="DepotEnergyMonitoring">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                            </svg>
                            <span>Depot Energy Monitoring</span>
                        </a>

                        <a href="/Telemetry/LoadMonitoring?trainId=All" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="LoadMonitoring">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            <span>Load Monitoring</span>
                        </a>

                        <a href="/TrainLocation/Live" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Live">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            </svg>
                            <span>Live Tracking</span>
                        </a>
                    </div>

                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Alerts & Notifications</h3>

                        <a href="/AlertDefinitions" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="AlertDefinitions">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6 6 0 10-12 0v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"></path>
                            </svg>
                            <span>Alert Management</span>
                        </a>

                        <a href="/AlertHistories1" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="AlertHistories1">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>Alert History</span>
                        </a>
                    </div>

                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Train Data</h3>

                        <a asp-controller="Trains" asp-action="Index" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"></path>
                            </svg>
                            <span>Trains</span>
                        </a>

                        <a asp-controller="BrakePressureLogs" asp-action="Index" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"></path>
                            </svg>
                            <span>Brake Pressure Logs</span>
                        </a>

                        <a asp-controller="CabinTempLogs" asp-action="Index" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            <span>Cabin Temperature Logs</span>
                        </a>

                        <a asp-controller="RFIDEntryLogs" asp-action="Index" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>RFID Entry Logs</span>
                        </a>
                    </div>
                    <a href="/WheelScan/Live" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Live">
                        <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        <span>Wheel Scan Monitoring</span>
                    </a>
                    <div class="mb-4">
                        <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Training Courses</h3>

                        <a href="/TrainingCourse" class="nav-item flex items-center p-3 rounded-lg hover:bg-indigo-100 dark:hover:bg-indigo-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="TrainingCourses">
                            <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7h18M3 12h18M3 17h18"></path>
                            </svg>
                            <span>TrainingCourses</span>
                        </a>
                    </div>
                }

                @* Account Section - Always Visible *@
                <div class="border-t border-zinc-200 dark:border-zinc-700 pt-4">
                    <h3 class="text-xs font-semibold text-zinc-500 dark:text-zinc-400 uppercase tracking-wider px-3 mb-2">Account</h3>
                    <a href="/Identity/Account/Manage" class="nav-item flex items-center p-3 rounded-lg hover:bg-rose-100 dark:hover:bg-rose-700 transition-colors duration-200 text-zinc-700 dark:text-zinc-200" data-page="Manage">
                        <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        <span>Account Settings</span>
                    </a>
                </div>
            </nav>
        </div>
    </aside>

    <!-- Main Content Area -->
    <main id="mainContent" class="content-transition pt-16 ml-64 min-h-screen">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex justify-center">
                <div class="w-full max-w-7xl">
                    @RenderBody()
                </div>
            </div>
        </div>
    </main>

    <!-- Overlay for mobile -->
    <div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden lg:hidden"></div>
    @RenderSection("Scripts", required: false)
    <script>
        class LayoutManager {
            constructor() {
                this.sidebar = document.getElementById('sidebar');
                this.mainContent = document.getElementById('mainContent');
                this.sidebarToggle = document.getElementById('sidebarToggle');
                this.overlay = document.getElementById('overlay');
                this.darkModeToggle = document.getElementById('darkModeToggle');
                this.sunIcon = document.getElementById('sunIcon');
                this.moonIcon = document.getElementById('moonIcon');

                this.isSidebarOpen = this.getStoredPreference('sidebarOpen', true);
                this.isDarkMode = this.getStoredPreference('darkMode', false);

                this.init();
            }

            init() {
                this.setupEventListeners();
                this.initializeDarkMode();
                this.initializeSidebar();
                this.highlightCurrentPage();
                this.handleResize();
            }

            setupEventListeners() {
                // Sidebar toggle
                this.sidebarToggle.addEventListener('click', () => this.toggleSidebar());

                // Dark mode toggle
                this.darkModeToggle.addEventListener('click', () => this.toggleDarkMode());

                // Overlay click (mobile)
                this.overlay.addEventListener('click', () => this.closeSidebar());

                // Window resize
                window.addEventListener('resize', () => this.handleResize());

                // Keyboard shortcuts
                document.addEventListener('keydown', (e) => {
                    if (e.ctrlKey && e.key === 'b') {
                        e.preventDefault();
                        this.toggleSidebar();
                    }
                    if (e.ctrlKey && e.key === 'd') {
                        e.preventDefault();
                        this.toggleDarkMode();
                    }
                });
            }

            toggleSidebar() {
                this.isSidebarOpen = !this.isSidebarOpen;
                this.updateSidebarState();
                this.storePreference('sidebarOpen', this.isSidebarOpen);
            }

            closeSidebar() {
                this.isSidebarOpen = false;
                this.updateSidebarState();
                this.storePreference('sidebarOpen', this.isSidebarOpen);
            }

            updateSidebarState() {
                const hamburger = this.sidebarToggle;

                if (window.innerWidth >= 1024) { // Desktop
                    if (this.isSidebarOpen) {
                        this.sidebar.style.transform = 'translateX(0)';
                        this.mainContent.style.marginLeft = '16rem';
                        hamburger.classList.remove('hamburger-active');
                    } else {
                        this.sidebar.style.transform = 'translateX(-100%)';
                        this.mainContent.style.marginLeft = '0';
                        hamburger.classList.add('hamburger-active');
                    }
                    this.overlay.classList.add('hidden');
                } else { // Mobile
                    if (this.isSidebarOpen) {
                        this.sidebar.style.transform = 'translateX(0)';
                        this.overlay.classList.remove('hidden');
                        hamburger.classList.remove('hamburger-active');
                    } else {
                        this.sidebar.style.transform = 'translateX(-100%)';
                        this.overlay.classList.add('hidden');
                        hamburger.classList.add('hamburger-active');
                    }
                    this.mainContent.style.marginLeft = '0';
                }
            }

            initializeSidebar() {
                this.updateSidebarState();
            }

            handleResize() {
                this.updateSidebarState();
            }

            toggleDarkMode() {
                this.isDarkMode = !this.isDarkMode;
                this.updateDarkModeState();
                this.storePreference('darkMode', this.isDarkMode);
            }

            initializeDarkMode() {
                this.updateDarkModeState();
            }

            updateDarkModeState() {
                if (this.isDarkMode) {
                    document.documentElement.classList.add('dark');
                    this.sunIcon.classList.add('hidden');
                    this.moonIcon.classList.remove('hidden');
                } else {
                    document.documentElement.classList.remove('dark');
                    this.sunIcon.classList.remove('hidden');
                    this.moonIcon.classList.add('hidden');
                }
            }

            highlightCurrentPage() {
                const currentPath = window.location.pathname.toLowerCase();
                const navItems = document.querySelectorAll('.nav-item');

                navItems.forEach(item => {
                    try{
                    const href = item.getAttribute('href').toLowerCase();
                    const isActive = (currentPath === '/' && href === '/') ||
                                   (currentPath !== '/' && currentPath.startsWith(href) && href !== '/');

                    if (isActive) {
                        item.classList.add('bg-pink-100', 'dark:bg-pink-300/30', 'text-pink-700', 'dark:text-pink-100', 'border-r-4', 'border-pink-300');
                        item.classList.remove('text-zinc-700', 'dark:text-zinc-200');
                    } else {
                        item.classList.remove('bg-pink-100', 'dark:bg-pink-300/30', 'text-pink-700', 'dark:text-pink-100', 'border-r-4', 'border-pink-300');
                        item.classList.add('text-zinc-700', 'dark:text-zinc-100');
                    }}
                    catch (e) {
                        console.warn('Error highlighting current page:', e);
                    }
                });
            }

            storePreference(key, value) {
                try {
                    localStorage.setItem(key, JSON.stringify(value));
                } catch (e) {
                    console.warn('Could not save preference to localStorage:', e);
                }
            }

            getStoredPreference(key, defaultValue) {
                try {
                    const stored = localStorage.getItem(key);
                    return stored ? JSON.parse(stored) : defaultValue;
                } catch (e) {
                    console.warn('Could not read preference from localStorage:', e);
                    return defaultValue;
                }
            }

        }

        // Unique key for our application
    const appKey = 'my-mvc-app-is-open';

    // Check if the key already exists
    if (localStorage.getItem(appKey)) {
        // Another tab is open, so display an alert and prevent further interaction
        document.body.innerHTML = '<h1>This application is already open in another tab.</h1><p>Please close the other tab to continue.</p>';
        window.stop(); // Stops loading the page
    } else {
        // This is the first tab, set the key
        localStorage.setItem(appKey, 'true');

        // Listen for changes in localStorage from other tabs
        window.addEventListener('storage', (event) => {
            if (event.key === appKey && !event.newValue) {
                // The other tab was closed, so clear our key and allow access
                localStorage.removeItem(appKey);
                window.location.reload(); // Reload the page to reset
            }
        });

        // Clean up when the tab is closed
        window.addEventListener('beforeunload', () => {
            localStorage.removeItem(appKey);
        });
    }

        // Initialize the layout manager when DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            new LayoutManager();
        });
    </script>
</body>
</html>