@model TryMeBitch.Models.Issues

@{
    ViewData["Title"] = "Edit Issue";
}

<div class="px-6 py-4 bg-gray-50 dark:bg-gray-900 min-h-screen">
    <!-- Header Section -->
    <div class="mb-8">
        <div class="flex items-center justify-between mb-6">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Edit Issue</h1>
                <p class="text-gray-600 dark:text-gray-400 mt-1">Update issue details and status</p>
            </div>
            <div class="flex items-center space-x-3">
                <!-- Issue ID Badge -->
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400">
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a.997.997 0 01-1.414 0l-7-7A1.997 1.997 0 013 12V7a4 4 0 014-4z"></path>
                    </svg>
                    ID: @Model.id
                </span>
                <!-- Back Button (Mobile) -->
                <a asp-action="Index" class="md:hidden inline-flex items-center px-3 py-2 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200 rounded-lg transition-colors">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                    </svg>
                </a>
            </div>
        </div>

        <!-- Issue Info Card -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
            <div class="grid md:grid-cols-2 gap-6">
                <!-- Author Info -->
                <div class="flex items-center space-x-4">
                    <div class="flex-shrink-0 h-12 w-12">
                        <div class="h-12 w-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-semibold">
                            @Model.Author.Substring(0, Math.Min(2, Model.Author.Length)).ToUpper()
                        </div>
                    </div>
                    <div>
                        <div class="text-sm font-medium text-gray-500 dark:text-gray-400">Reported by</div>
                        <div class="text-lg font-semibold text-gray-900 dark:text-gray-100">@Model.Author</div>
                        <div class="text-sm text-gray-600 dark:text-gray-400">@Model.station</div>
                    </div>
                </div>

                <!-- Issue Details -->
                <div>
                    <div class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-2">Issue Title</div>
                    <div class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2">@Model.title</div>
                    <div class="text-sm text-gray-600 dark:text-gray-400">
                        Created on @Model.timestamp.ToString("MMMM dd, yyyy 'at' HH:mm")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Form -->
    <div class="max-w-4xl mx-auto">
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
            <form asp-action="Edit" novalidate class="p-8">
                <!-- Hidden Fields -->
                <input type="hidden" asp-for="id" />
                <input type="hidden" asp-for="Author" />
                <input type="hidden" asp-for="timestamp" />
                <input type="hidden" asp-for="station" />
                <input type="hidden" asp-for="title" />

                <div class="space-y-8">
                    <!-- Summary Section -->
                    <div>
                        <div class="flex items-center mb-4">
                            <svg class="w-5 h-5 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">Issue Summary</h3>
                        </div>

                        <div class="space-y-2">
                            <label asp-for="summary" class="block text-sm font-semibold text-gray-700 dark:text-gray-200">
                                Detailed Description <span class="text-red-500">*</span>
                            </label>
                            <textarea asp-for="summary" rows="6"
                                      placeholder="Provide a comprehensive description of the issue, including steps to reproduce, expected vs actual behavior, and any relevant context..."
                                      class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 resize-vertical"></textarea>
                            <div class="flex justify-between items-center text-xs text-gray-500 dark:text-gray-400">
                                <span>Be as detailed as possible to help with resolution</span>
                                <span id="charCount" class="font-mono">0 characters</span>
                            </div>
                            <span asp-validation-for="summary" class="text-red-500 text-sm"></span>
                        </div>
                    </div>

                    <!-- Status and Priority Section -->
                    <div>
                        <div class="flex items-center mb-6">
                            <svg class="w-5 h-5 text-gray-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">Status & Priority</h3>
                        </div>

                        <div class="grid md:grid-cols-2 gap-6">
                            <!-- Severity -->
                            <div class="space-y-2">
                                <label asp-for="Severity" class="block text-sm font-semibold text-gray-700 dark:text-gray-200">
                                    Severity Level <span class="text-red-500">*</span>
                                </label>
                                <div class="relative">
                                    <select asp-for="Severity" id="severitySelect"
                                            class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 appearance-none cursor-pointer">
                                        <option value="">Select severity level</option>
                                        <option value="Low">🟢 Low - Minor issue, low impact</option>
                                        <option value="Medium">🟡 Medium - Moderate impact</option>
                                        <option value="High">🟠 High - Significant impact</option>
                                        <option value="Critical">🔴 Critical - Urgent, system down</option>
                                    </select>
                                    <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div id="severityHelp" class="text-xs text-gray-500 dark:text-gray-400">
                                    Choose based on business impact and urgency
                                </div>
                                <span asp-validation-for="Severity" class="text-red-500 text-sm"></span>
                            </div>

                            <!-- Status -->
                            <div class="space-y-2">
                                <label asp-for="status" class="block text-sm font-semibold text-gray-700 dark:text-gray-200">
                                    Current Status <span class="text-red-500">*</span>
                                </label>
                                <div class="relative">
                                    <select asp-for="status" id="statusSelect"
                                            class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 appearance-none cursor-pointer">
                                        <option value="">Select current status</option>
                                        <option value="Open">Open - New or reopened issue</option>
                                        <option value="In Progress">In Progress - Actively being worked on</option>
                                        <option value="Resolved">Resolved - Issue has been fixed</option>
                                        <option value="Closed">Closed - Issue completed and verified</option>
                                    </select>
                                    <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                        </svg>
                                    </div>
                                </div>
                                <div id="statusHelp" class="text-xs text-gray-500 dark:text-gray-400">
                                    Update to reflect current progress
                                </div>
                                <span asp-validation-for="status" class="text-red-500 text-sm"></span>
                            </div>
                        </div>

                        <!-- Status Change Preview -->
                        <div id="statusPreview" class="mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg hidden">
                            <div class="flex items-start">
                                <svg class="w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <div>
                                    <h4 class="text-sm font-semibold text-blue-800 dark:text-blue-200">Status Change</h4>
                                    <p id="statusMessage" class="text-sm text-blue-700 dark:text-blue-300 mt-1"></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="flex flex-col sm:flex-row gap-4 pt-8 mt-8 border-t border-gray-200 dark:border-gray-700">
                    <button type="submit" id="saveButton"
                            class="flex-1 sm:flex-none px-8 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-semibold rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-0.5 disabled:transform-none transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800">
                        <span class="flex items-center justify-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            Save Changes
                        </span>
                    </button>

                    <a asp-action="Index"
                       class="flex-1 sm:flex-none px-8 py-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200 font-semibold rounded-lg shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 text-center">
                        <span class="flex items-center justify-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                            </svg>
                            Back to List
                        </span>
                    </a>

                    <!-- Additional Actions -->
                    <div class="hidden sm:flex items-center space-x-2 ml-auto">
                        <a asp-action="Details" asp-route-id="@Model.id"
                           class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                            View Details
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const summaryTextarea = document.querySelector('textarea[name="summary"]');
        const charCount = document.getElementById('charCount');
        const severitySelect = document.getElementById('severitySelect');
        const statusSelect = document.getElementById('statusSelect');
        const statusPreview = document.getElementById('statusPreview');
        const statusMessage = document.getElementById('statusMessage');
        const saveButton = document.getElementById('saveButton');

        // Character count for summary
        function updateCharCount() {
            const count = summaryTextarea.value.length;
            charCount.textContent = `${count.toLocaleString()} characters`;

            if (count > 1000) {
                charCount.classList.add('text-amber-600');
                charCount.classList.remove('text-gray-500');
            } else {
                charCount.classList.remove('text-amber-600');
                charCount.classList.add('text-gray-500', 'dark:text-gray-400');
            }
        }

        // Status change preview
        function updateStatusPreview() {
            const currentStatus = statusSelect.getAttribute('data-original') || '@Model.status';
            const newStatus = statusSelect.value;

            if (newStatus && newStatus !== currentStatus) {
                let message = '';
                switch (newStatus) {
                    case 'Open':
                        message = `Status will change from "${currentStatus}" to "Open". This issue will be marked as available for assignment.`;
                        break;
                    case 'In Progress':
                        message = `Status will change from "${currentStatus}" to "In Progress". This indicates active work is being performed.`;
                        break;
                    case 'Resolved':
                        message = `Status will change from "${currentStatus}" to "Resolved". The issue will be marked as fixed and ready for verification.`;
                        break;
                    case 'Closed':
                        message = `Status will change from "${currentStatus}" to "Closed". This issue will be marked as completed.`;
                        break;
                }
                statusMessage.textContent = message;
                statusPreview.classList.remove('hidden');
            } else {
                statusPreview.classList.add('hidden');
            }
        }

        // Form validation
        function validateForm() {
            const summary = summaryTextarea.value.trim();
            const severity = severitySelect.value;
            const status = statusSelect.value;

            const isValid = summary.length > 0 && severity && status;
            saveButton.disabled = !isValid;

            return isValid;
        }

        // Event listeners
        summaryTextarea.addEventListener('input', function() {
            updateCharCount();
            validateForm();
        });

        severitySelect.addEventListener('change', validateForm);
        statusSelect.addEventListener('change', function() {
            updateStatusPreview();
            validateForm();
        });

        // Store original status for comparison
        statusSelect.setAttribute('data-original', '@Model.status');

        // Initialize
        updateCharCount();
        validateForm();
        updateStatusPreview();

        // Auto-resize textarea
        summaryTextarea.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        });

        // Unsaved changes warning
        let originalFormData = new FormData(document.querySelector('form'));
        let hasUnsavedChanges = false;

        function checkForChanges() {
            const currentFormData = new FormData(document.querySelector('form'));
            hasUnsavedChanges = false;

            for (let [key, value] of originalFormData.entries()) {
                if (currentFormData.get(key) !== value) {
                    hasUnsavedChanges = true;
                    break;
                }
            }
        }

        summaryTextarea.addEventListener('input', checkForChanges);
        severitySelect.addEventListener('change', checkForChanges);
        statusSelect.addEventListener('change', checkForChanges);

        // Warn before leaving with unsaved changes
        window.addEventListener('beforeunload', function(e) {
            if (hasUnsavedChanges) {
                e.preventDefault();
                e.returnValue = '';
            }
        });

        // Clear warning on form submit
        document.querySelector('form').addEventListener('submit', function() {
            hasUnsavedChanges = false;
        });
    });
</script>